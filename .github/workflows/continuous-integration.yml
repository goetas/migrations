name: "Continuous Integration"

on:
  pull_request:
  push:
    branches:
      - "*.x"

jobs:
  composer_normalize:
    name: "Composer Normalize"
    runs-on: "ubuntu-20.04"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: "docker://ergebnis/composer-normalize-action:latest"
        with:
          args: "--dry-run"

  phpunit:
    name: "PHPUnit"
    runs-on: "ubuntu-20.04"

    env:
      COLUMNS: 120

    strategy:
      matrix:
        php-version:
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0snapshot"
        deps:
          - "normal"
        include:
          - deps: "low"
            php-version: "7.2"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "pcov"
          extensions: "pdo_sqlite"
          ini-values: "zend.assertions=1"

      - name: "Download box"
        run: "./download-box.sh"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-locked-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-locked-"

      - name: "Install dependencies with composer"
        run: "composer update --no-interaction --prefer-dist --no-progress"
        if: "${{ matrix.deps == 'normal' }}"

      - name: "Install lowest possible dependencies with composer"
        run: "composer update --no-interaction --prefer-dist --prefer-lowest --no-progress"
        if: "${{ matrix.deps == 'low' }}"

      - name: "Run PHPUnit"
        run: "vendor/bin/phpunit --coverage-clover=coverage.xml"

      - name: "Upload coverage file"
        uses: "actions/upload-artifact@v2"
        with:
          name: "phpunit-${{ matrix.deps }}-${{ matrix.php-version }}.coverage"
          path: "coverage.xml"

  upload_coverage:
    name: "Upload coverage to Codecov"
    runs-on: "ubuntu-20.04"
    needs:
      - "phpunit"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 2

      - name: "Download coverage files"
        uses: "actions/download-artifact@v2"
        with:
          path: "reports"

      - name: "Upload to Codecov"
        uses: "codecov/codecov-action@v1"
        with:
          directory: reports
